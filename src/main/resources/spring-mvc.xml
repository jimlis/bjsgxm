<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

	<!-- 自动扫描包，使SpringMVC @controller注解 -->
	<context:component-scan base-package="com.**.controller" />
	
	<mvc:default-servlet-handler />
	
	<mvc:resources location="classpath:/static/css/" mapping="/css/**"/>
	<mvc:resources location="classpath:/static/fonts/" mapping="/editor-app/**"/>
	<mvc:resources location="classpath:/static/fonts/" mapping="/fonts/**"/>
	<mvc:resources location="classpath:/static/img/" mapping="/img/**"/>
	<mvc:resources location="classpath:/static/js/" mapping="/js/**"/>
	<mvc:resources location="classpath:/public/" mapping="/*.html"/>
	
	<mvc:annotation-driven/>

	<!-- 启动SpringMVC的注解功能，完成请求和注解PO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<!-- 结果数据支持String，但是这个解析器一定要放在JSON解析器前 -->
				<ref bean="stringHttpMessageConverter" />
				<!-- JSON解析：结果数据支持(fastjson) -->
				<!--<ref bean="fastJsonHttpMessageConverter"/> -->
				<!-- JSON解析：结果数据支持(jackson) -->
				<ref bean="mappingJacksonHttpMessageConverter" />
			</list>
		</property>
	</bean>
	<!-- String转化器 -->
	<bean id="stringHttpMessageConverter"
		class="org.springframework.http.converter.StringHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<!-- 这里顺序一定不能反，一定先写text/html,否则IE下出现下载提示 -->
				<value>text/html;charset=UTF-8</value>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	
	<bean id="springResourceTemplateResolver"
		class="org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver">
		<property name="prefix" value="classpath:/templates/"></property>
		<property name="suffix" value=".html"></property>
		<property name="templateMode" value="LEGACYHTML5"></property>
		<property name="characterEncoding" value="UTF-8"></property>
		<property name="cacheable" value="false"></property>
	</bean>
	
	<bean id="springTemplateEngine"
		class="org.thymeleaf.spring4.SpringTemplateEngine">
		<property name="templateResolver" ref="springResourceTemplateResolver"></property>
	</bean>
	
	<bean id="thymeleafViewResolver"
		class="org.thymeleaf.spring4.view.ThymeleafViewResolver">
		<property name="templateEngine" ref="springTemplateEngine"></property>
		<property name="characterEncoding" value="UTF-8"></property>
	</bean>

	<!-- JSON转化器(jackson版本) -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="objectMapper">
			<bean class="com.fasterxml.jackson.databind.ObjectMapper" >
				<property name="dateFormat">
					<bean class="java.text.SimpleDateFormat">
						<constructor-arg type="java.lang.String"
							value="yyyy-MM-dd HH:mm:ss" />
					</bean>
				</property>
				
				<!-- <property name="serializationInclusion">
					注入枚举类型,过滤对象，这样JSON中不会输出NULL属性对象
					  <value type="com.fasterxml.jackson.annotation.JsonInclude.Include">NON_NULL</value>
				</property>  -->
				 
			</bean>
		</property>
		<property name="supportedMediaTypes">
			<list>
				<!-- 这里顺序一定不能反，一定先写text/html,否则IE下出现下载提示 -->
				<value>text/html;charset=UTF-8</value>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<!-- 配置文件上传,如果不使用可不配置，而且POM可以不加入文件上传包 -->
	 <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	  	<property name="maxUploadSize" value="31457280"/>
	  	<property name="defaultEncoding" value="UTF-8"/>
	  	<property name="resolveLazily" value="true"/>
	  </bean>

</beans>